const chatMessages = document.getElementById("chat-messages");
let allMessages = []; // –•—Ä–∞–Ω–∏–º –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è

// –û—Ç–∫—Ä—ã—Ç—å –æ–∫–Ω–æ —á–∞—Ç–∞ –∏ –æ—á–∏—Å—Ç–∏—Ç—å —Å—Ç–∞—Ä—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
function openChat() {
    allMessages = [];
    updateChat([]);
    document.getElementById("chat-modal").classList.add("active");
    document.getElementById("user-question").focus();
}

// –ó–∞–∫—Ä—ã—Ç—å –æ–∫–Ω–æ —á–∞—Ç–∞
function closeChat() {
    document.getElementById("chat-modal").classList.remove("active");
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —á–∞—Ç–∞
function updateChat(messages) {
    chatMessages.innerHTML = '';

    if (messages.length === 0) {
        chatMessages.classList.add('empty');
        chatMessages.innerHTML = `
            <div class="empty-message">
                ü§ñ –Ø ‚Äî –≤–∞—à –ø–æ–º–æ—â–Ω–∏–∫. –ó–∞–¥–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å –ø–æ —É—Ä–æ–∫—É, –∏ —è –ø–æ—Å—Ç–∞—Ä–∞—é—Å—å –ø–æ–º–æ—á—å!
            </div>
        `;
    } else {
        chatMessages.classList.remove('empty');
        messages.forEach(({ text, from }) => {
            const div = document.createElement('div');
            div.className = 'message ' + (from === 'user' ? 'user' : 'bot');
            div.innerHTML = text;
            chatMessages.appendChild(div);
        });
        chatMessages.scrollTop = chatMessages.scrollHeight;
    }
}

// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
function addMessage(text, from = 'user') {
    const formattedText = from === 'bot' ? formatAIResponse(text) : escapeHtml(text);
    allMessages.push({ text: formattedText, from });
    updateChat(allMessages);
}

// –≠–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ HTML –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
function escapeHtml(text) {
    const div = document.createElement('div');
    div.textContent = text;
    return div.innerHTML;
}

// –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞ –ò–ò
function formatAIResponse(rawText) {
    const escapeHtml = (text) => {
        const div = document.createElement('div');
        div.textContent = text;
        return div.innerHTML;
    };

    let formatted = '';
    let inCodeBlock = false;
    const lines = rawText.split('\n');

    for (let line of lines) {
        if (line.trim().startsWith("```")) {
            formatted += inCodeBlock ? "</code></pre>" : "<pre><code>";
            inCodeBlock = !inCodeBlock;
            continue;
        }

        if (inCodeBlock) {
            formatted += escapeHtml(line) + "\n";
            continue;
        }

        const inlineCodePattern = /`([^`]+)`/g;
        const processedLine = line.replace(inlineCodePattern, (_, code) => `<code>${escapeHtml(code)}</code>`);
        formatted += processedLine + "<br>";
    }

    if (inCodeBlock) {
        formatted += "</code></pre>";
    }

    return formatted;
}

// –û—Ç–ø—Ä–∞–≤–∫–∞ –≤–æ–ø—Ä–æ—Å–∞
async function sendQuestion() {
    const input = document.getElementById("user-question");
    const message = input.value.trim();
    if (!message) return;

    addMessage(message, 'user');
    input.value = "";

    // –ü–æ–ª—É—á–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç —É—Ä–æ–∫–∞
    const context = document.getElementById("lesson-context").textContent || "";

    // –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Å—Ç–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ò–ò, —á—Ç–æ–±—ã –ø–æ—Ç–æ–º –∑–∞–ø–æ–ª–Ω—è—Ç—å
    const botPlaceholder = { text: '', from: 'bot' };
    allMessages.push(botPlaceholder);
    updateChat(allMessages);

    try {
        const response = await fetch("/chat-stream", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({ message, context })
        });

        if (!response.ok || !response.body) {
            botPlaceholder.text = "–û—à–∏–±–∫–∞ –æ—Ç–≤–µ—Ç–∞ –æ—Ç –ò–ò.";
            updateChat(allMessages);
            return;
        }

        const reader = response.body.getReader();
        const decoder = new TextDecoder("utf-8");
        let buffer = "";

        while (true) {
            const { done, value } = await reader.read();
            if (done) break;
            buffer += decoder.decode(value, { stream: true });

            const parts = buffer.split("\n\n");
            buffer = parts.pop();

            for (let part of parts) {
                if (part.startsWith("data:")) {
                    const text = part.replace(/^data:\s*/, "");
                    botPlaceholder.text += formatAIResponse(text);
                    updateChat(allMessages);
                }
            }
        }
    } catch (err) {
        botPlaceholder.text = "–°–±–æ–π —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º.";
        updateChat(allMessages);
    }
}

// –û—Ç–ø—Ä–∞–≤–∫–∞ –ø–æ Enter
document.getElementById("user-question").addEventListener("keydown", function(e) {
    if (e.key === "Enter") {
        e.preventDefault();
        sendQuestion();
    }
});
